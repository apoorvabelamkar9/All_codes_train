
////////-----rtos-1-----///////

/* ###################################################################
**     Filename    : ProcessorExpert.c
**     Project     : ProcessorExpert
**     Processor   : MKL25Z128VLK4
**     Version     : Driver 01.01
**     Compiler    : GNU C Compiler
**     Date/Time   : 2022-10-21, 14:16, # CodeGen: 0
**     Abstract    :
**         Main module.
**         This module contains user's application code.
**     Settings    :
**     Contents    :
**         No public methods
**
** ###################################################################*/
/*!
** @file ProcessorExpert.c
** @version 01.01
** @brief
**         Main module.
**         This module contains user's application code.
*/         
/*!
**  @addtogroup ProcessorExpert_module ProcessorExpert module documentation
**  @{
*/         
/* MODULE ProcessorExpert */


/* Including needed modules to compile this module/procedure */
#include "Cpu.h"
#include "Events.h"
#include "FRTOS1.h"
#include "MCUC1.h"
#include "UTIL1.h"
#include "UTIL2.h"
#include "CsIO1.h"
#include "IO1.h"
/* Including shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
//#include <stdio.h>

/* User includes (#include below this line is not maintained by Processor Expert) */

static void taskL(void *pvParameters);
static void taskM(void *pvParameters);
static void taskH(void *pvParameters);

static void taskL(void *pvParameters)
{
	//unsigned char s7CC[]={0x3f,0x30,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x71,0x00};
	
	    printf("from taskL is ENTRY \n");
		printf("taskL is initialised IS CREATING\n");
	    xTaskCreate(taskM,"taskM",100,NULL,10,NULL);
	    printf("from taskL L is giving SEM\n");
	    printf("from taskL EXIT\n");
	    fflush(stdout);
	    
	
}

static void taskM(void *pvParameters)
{
	//unsigned char s7CC[]={0x3f,0x30,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x71,0x00};
        printf("from taskM is ENTRY \n");
	    printf("taskM is initialised IS CREATING\n");
	    xTaskCreate(taskH,"taskH",100,NULL,10,NULL);
	    printf("taskH is Exit\n");
		
}
static void taskH(void *pvParameters)
{
	//unsigned char s7CC[]={0x3f,0x30,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x71,0x00};
    printf("taskH is ENTRY \n");
    printf("taskH is Exit\n");
	
}

/*lint -save  -e970 Disable MISRA rule (6.3) checking. */
int main(void)
/*lint -restore Enable MISRA rule (6.3) checking. */
{
	
  /* Write your local variable definition here */
//int i;
  /*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
  PE_low_level_init();
  /*** End of Processor Expert internal initialization.                    ***/

  /* Write your code here */
  /* For example: for(;;) { } */
//  		
        
          xTaskCreate(taskL,"taskL",100,NULL,10,NULL);
  
	 	 
  //}

  /*** Don't write any code pass this line, or it will be deleted during code generation. ***/
  /*** RTOS startup code. Macro PEX_RTOS_START is defined by the RTOS component. DON'T MODIFY THIS CODE!!! ***/
  #ifdef PEX_RTOS_START
    PEX_RTOS_START();                  /* Startup of the selected RTOS. Macro is defined by the RTOS component. */
  #endif
  /*** End of RTOS startup code.  ***/
  /*** Processor Expert end of main routine. DON'T MODIFY THIS CODE!!! ***/
  for(;;){}
  /*** Processor Expert end of main routine. DON'T WRITE CODE BELOW!!! ***/
} /*** End of main routine. DO NOT MODIFY THIS TEXT!!! ***/

/* END ProcessorExpert */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.08]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/


////////////-------------rtos-2------////////
/* ###################################################################
**     Filename    : ProcessorExpert.c
**     Project     : ProcessorExpert
**     Processor   : MKL25Z128VLK4
**     Version     : Driver 01.01
**     Compiler    : GNU C Compiler
**     Date/Time   : 2022-10-21, 14:16, # CodeGen: 0
**     Abstract    :
**         Main module.
**         This module contains user's application code.
**     Settings    :
**     Contents    :
**         No public methods
**
** ###################################################################*/
/*!
** @file ProcessorExpert.c
** @version 01.01
** @brief
**         Main module.
**         This module contains user's application code.
*/         
/*!
**  @addtogroup ProcessorExpert_module ProcessorExpert module documentation
**  @{
*/         
/* MODULE ProcessorExpert */


/* Including needed modules to compile this module/procedure */
#include "Cpu.h"
#include "Events.h"
#include "FRTOS1.h"
#include "MCUC1.h"
#include "UTIL1.h"
#include "UTIL2.h"
#include "CsIO1.h"
#include "IO1.h"
#include "mainLED.h"
#include "BitIoLdd1.h"
#include "led18.h"
#include "BitIoLdd2.h"
#include "led19.h"
#include "BitIoLdd3.h"
/* Including shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
//#include <stdio.h>
#define USER_DELAY_MYTASK3 1000
#define USER_DELAY_MYTASK2 1000
#define USER_DELAY_MYTASK1 1000
/* User includes (#include below this line is not maintained by Processor Expert) */

static void Mytask1L(void *pvParameters);
static void Mytask2M(void *pvParameters);
static void Mytask3H(void *pvParameters);

static void Mytask3H(void *pvParameters)
{
	//unsigned char s7CC[]={0x3f,0x30,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x71,0x00};
	
    printf("taskH is ENTRY \n");
    printf("taskH is Exit\n");
    fflush(stdout);
    vTaskDelay(USER_DELAY_MYTASK2/portTICK_PERIOD_MS);
	led19_NegVal();
	
}

static void Mytask2M(void *pvParameters)
{
	//unsigned char s7CC[]={0x3f,0x30,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x71,0x00};
	
        printf("from taskM is ENTRY \n");
	    printf("taskM is initialised IS CREATING\n");
	    xTaskCreate(Mytask3H,"task3H",100,NULL,12,NULL);
	    printf("from ,Mytask2  M is Exit\n");
	    fflush(stdout);
	    vTaskDelay(USER_DELAY_MYTASK2/portTICK_PERIOD_MS);
	    led18_NegVal();

}
static void Mytask1L(void *pvParameters)
{
	//unsigned char s7CC[]={0x3f,0x30,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x71,0x00};
	
	    printf("from taskL is ENTRY \n");
		printf("taskL is initialised IS CREATING\n");
	    xTaskCreate(Mytask2M,"task2M",100,NULL,11,NULL);
	    printf("from task1L Exit\n");
	    fflush(stdout);
	    fflush(stdout);
	    vTaskDelay(USER_DELAY_MYTASK1/portTICK_PERIOD_MS);
	    mainLED_NegVal();

      
	
}




/*lint -save  -e970 Disable MISRA rule (6.3) checking. */
int main(void)
/*lint -restore Enable MISRA rule (6.3) checking. */
{
	
  /* Write your local variable definition here */
//int i;
  /*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
  PE_low_level_init();
  /*** End of Processor Expert internal initialization.                    ***/

  /* Write your code here */
  /* For example: for(;;) { } */
//
        
          xTaskCreate(Mytask1L,"task1L",100,NULL,10,NULL);
  
  //}

  /*** Don't write any code pass this line, or it will be deleted during code generation. ***/
  /*** RTOS startup code. Macro PEX_RTOS_START is defined by the RTOS component. DON'T MODIFY THIS CODE!!! ***/
  #ifdef PEX_RTOS_START
    PEX_RTOS_START();                  /* Startup of the selected RTOS. Macro is defined by the RTOS component. */
  #endif
  /*** End of RTOS startup code.  ***/
  /*** Processor Expert end of main routine. DON'T MODIFY THIS CODE!!! ***/
  for(;;){}
  /*** Processor Expert end of main routine. DON'T WRITE CODE BELOW!!! ***/
} /*** End of main routine. DO NOT MODIFY THIS TEXT!!! ***/

/* END ProcessorExpert */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.08]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
